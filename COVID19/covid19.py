# -*- coding: utf-8 -*-
"""covid19.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kw1KW8vCjr-WCLuBetw6Z_MwTaToIyHQ
"""

! pip install -q kaggle

from google.colab import files

files.upload()

! mkdir ~/.kaggle

! cp kaggle.json ~/.kaggle/

! chmod 600 ~/.kaggle/kaggle.json

! kaggle datasets list

!kaggle datasets download -d sudalairajkumar/covid19-in-india

! mkdir train

! unzip covid19-in-india.zip -d train

import pandas as pd
import matplotlib.pyplot as plt

df=pd.read_csv('/content/train/AgeGroupDetails.csv')

df

df['TotalCases'].sum()

df1=pd.read_csv('/content/train/HospitalBedsIndia.csv')

df1.head()

df1.rename(columns={'State/UT': 'State'},inplace=True)

plt.style.available

import matplotlib.pyplot as plt
fig, axes= plt.subplots(nrows=1, ncols=1,figsize=(30,10))
plt.style.use('classic')

plt.bar(df1['State'],df1['NumPrimaryHealthCenters_HMIS'],color='green')
# plt.bar(df1['State'],df1['NumCommunityHealthCenters_HMIS'],color='Red')
plt.xticks(rotation=45)

plt.show()

fig, axes= plt.subplots(nrows=1, ncols=1,figsize=(30,10))


plt.bar(df1['State'],df1['NumCommunityHealthCenters_HMIS'])
plt.xticks(rotation=45)

plt.show()

fig, axes= plt.subplots(nrows=1, ncols=1,figsize=(30,10))
plt.bar(df1['State'],df1['TotalPublicHealthFacilities_HMIS'])
plt.xticks(rotation=45)
plt.show()

fig, axes= plt.subplots(nrows=1, ncols=1,figsize=(30,10))
plt.bar(df1['State'],df1['NumPublicBeds_HMIS'])
plt.xticks(rotation=45)
plt.show()

df1.set_index('State',inplace=True)

"""
This statistics will not be right bcs it includes the overall india numbers too.
"""

df1.sum(axis = 0, skipna = True)

"""So the total values of each columns can be trpresented as """

df1.tail(1)

df1['NumPrimaryHealthCenters_HMIS'][36]=29899
print("Total Number of hospitals:"+str(int(df1['NumPrimaryHealthCenters_HMIS'][36])+int(df1['NumCommunityHealthCenters_HMIS'][36])+int(df1['NumSubDistrictHospitals_HMIS'][36])+int(df1['NumDistrictHospitals_HMIS'][36])+int(df1['NumRuralHospitals_NHP18'][36])+int(df1['NumUrbanHospitals_NHP18'][36])))

df2=pd.read_csv('/content/train/StatewiseTestingDetails.csv')

df2

df2.shape

df2.describe()

df2.plot()

len(df2["State"].unique())

df2['Date'] = pd.to_datetime(df2['Date'])

df2.groupby(df2['Date'].dt.date)

df21=df2[df2["State"]=='Madhya Pradesh']

df21.tail()

df21.shape

main=pd.DataFrame(df21.iloc[-1:,:])

df21['Date'] = pd.to_datetime(df21['Date'])

df21.set_index("Date",inplace=True)

from statsmodels.graphics.tsaplots import plot_acf, plot_pacf

df211=df21.drop(["State","TotalSamples","Negative"],axis=1)
df211.tail()

from statsmodels.tsa.arima_model import ARIMA

df_model=ARIMA(df211,order=(2,2,1))

df_fit=df_model.fit()

df_fit.aic

df_forcast=df_fit.forecast(steps=24)[0]

df_forcast

predicted1=

i=8
lst=[]
for pred in df_forcast:
  pred=int(pred)
  lst.append(["2020-07-"+str(i),pred])
  i+=1
predicted= pd.DataFrame(data=lst, columns=["Date", "Positive"])

predicted['Date']=pd.to_datetime(predicted['Date'])

! pip install -q pandas.tabel.plotting

import matplotlib.pyplot as plt
import pandas as pd
from pandas import plotting
# EDIT: see deprecation warnings below

ax = plt.subplot(111, frame_on=False) # no visible frame
ax.xaxis.set_visible(False)  # hide the x axis
ax.yaxis.set_visible(False)  # hide the y axis

plotting.table(ax, predicted)  # where df is your data frame

plt.savefig('mytable.png')

predicted.set_index("Date",inplace=True)

predicted=df211.append(predicted)

predicted.tail()

plt.plot(df21["Positive"],label="Total Cases",color="black")
plt.plot(predicted["Positive"],label="Predicted",color='red')
plt.xticks(rotation=45)
plt.xlabel("Date")
plt.ylabel("Number of Cases")
plt.legend()
# plt.plot(df21["Date"],df21["TotalSamples"])
plt.show()



df21['TotalSamples'] = df21["TotalSamples"].rolling(window=10).mean()

plt.plot(df21["Positive"],label="Total Number of Cases")
plt.xticks(rotation=45)
plt.xlabel("Date")
plt.ylabel("Number of Cases")
plt.legend()
# plt.plot(df21["Date"],df21["TotalSamples"])
plt.show()

plt.plot(df21["TotalSamples"])
plt.xlabel("Date")
plt.ylabel("Number of Samples")
plt.legend("Total Number of Samples")
plt.xticks(rotation=45)
plt.show()

















df21=df2[df2["State"]=='Andaman and Nicobar Islands']
main=main.append(df21.iloc[-1:,:],ignore_index=True)

df21=df2[df2["State"]=='Arunachal Pradesh']
main=main.append(df21.iloc[-1:,:],ignore_index=True)

df21=df2[df2["State"]=='Andhra Pradesh']
main=main.append(df21.iloc[-1:,:],ignore_index=True)

df21=df2[df2["State"]=='Assam']
main=main.append(df21.iloc[-1:,:],ignore_index=True)

main

df21=df2[df2["State"]=='Bihar']
main=main.append(df21.iloc[-1:,:],ignore_index=True)

df21=df2[df2["State"]=='Chandigarh']
main=main.append(df21.iloc[-1:,:],ignore_index=True)

df21=df2[df2["State"]=='Chhattisgarh']
main=main.append(df21.iloc[-1:,:],ignore_index=True)

df21=df2[df2["State"]=='Dadra and Nagar Haveli and Daman and Diu']
main=main.append(df21.iloc[-1:,:],ignore_index=True)

df21=df2[df2["State"]=='Delhi']
main=main.append(df21.iloc[-1:,:],ignore_index=True)

df21=df2[df2["State"]=='Goa']
main=main.append(df21.iloc[-1:,:],ignore_index=True)

df21=df2[df2["State"]=='Gujarat']
main=main.append(df21.iloc[-1:,:],ignore_index=True)

df21=df2[df2["State"]=='Haryana']
main=main.append(df21.iloc[-1:,:],ignore_index=True)

df21=df2[df2["State"]=='Himachal Pradesh']
main=main.append(df21.iloc[-1:,:],ignore_index=True)

df21=df2[df2["State"]=='Jammu and Kashmir']
main=main.append(df21.iloc[-1:,:],ignore_index=True)

df21=df2[df2["State"]=='Jharkhand']
main=main.append(df21.iloc[-1:,:],ignore_index=True)

df21=df2[df2["State"]=='Karnataka']
main=main.append(df21.iloc[-1:,:],ignore_index=True)

df21=df2[df2["State"]=='Kerala']
main=main.append(df21.iloc[-1:,:],ignore_index=True)

df21=df2[df2["State"]=='Ladakh']
main=main.append(df21.iloc[-1:,:],ignore_index=True)

df21=df2[df2["State"]=='Maharashtra']
main=main.append(df21.iloc[-1:,:],ignore_index=True)

df21=df2[df2["State"]=='Manipur']
main=main.append(df21.iloc[-1:,:],ignore_index=True)

df21=df2[df2["State"]=='Meghalaya']
main=main.append(df21.iloc[-1:,:],ignore_index=True)

df21=df2[df2["State"]=='Mizoram']
main=main.append(df21.iloc[-1:,:],ignore_index=True)

df21=df2[df2["State"]=='Nagaland']
main=main.append(df21.iloc[-1:,:],ignore_index=True)

df21=df2[df2["State"]=='Odisha']
main=main.append(df21.iloc[-1:,:],ignore_index=True)

df21=df2[df2["State"]=='Puducherry']
main=main.append(df21.iloc[-1:,:],ignore_index=True)

df21=df2[df2["State"]=='Punjab']
main=main.append(df21.iloc[-1:,:],ignore_index=True)

df21=df2[df2["State"]=='Rajasthan']
main=main.append(df21.iloc[-1:,:],ignore_index=True)

df21=df2[df2["State"]=='Sikkim']
main=main.append(df21.iloc[-1:,:],ignore_index=True)

df21=df2[df2["State"]=='Tamil Nadu']
main=main.append(df21.iloc[-1:,:],ignore_index=True)

df21=df2[df2["State"]=='Telangana']
main=main.append(df21.iloc[-1:,:],ignore_index=True)

df21=df2[df2["State"]=='Tripura']
main=main.append(df21.iloc[-1:,:],ignore_index=True)

df21=df2[df2["State"]=='Uttar Pradesh']
main=main.append(df21.iloc[-1:,:],ignore_index=True)

df21=df2[df2["State"]=='Uttarakhand']
main=main.append(df21.iloc[-1:,:],ignore_index=True)

df21=df2[df2["State"]=='West Bengal']
main=main.append(df21.iloc[-1:,:],ignore_index=True)

main.shape

print("Total Samples",sum(main['TotalSamples']))

print("Total Possitive",sum(main['Positive']))

df2['Date'] = pd.to_datetime(df2['Date'])

df1=df2.groupby(df2['Date'].dt.date)





df4=pd.read_csv('/content/train/ICMRTestingLabs.csv')

df4.head()

df4.shape

df5=pd.read_csv('/content/train/IndividualDetails.csv')

df5.head()

df5.shape

df5.current_status.value_counts()

df6=pd.read_csv('/content/train/StatewiseTestingDetails.csv')

df6.head()

df6.shape

df6['Date']=pd.to_datetime(df6['Date'])

df6.head()

df6.tail()

df6.dtypes

df6['Positive'].sum(axis = 0, skipna = True)

df7=pd.read_csv('/content/train/covid_19_india.csv')

df7.head()

df7.shape

df7['Date'].isna().sum()

df7.rename(columns={'State/UnionTerritory': 'State'},inplace=True)

df8=df7[df7['State']=='Telengana']

df8.tail()

df8['Confirmed']

df9=pd.read_csv('/content/train/population_india_census2011.csv')

df9.head()

